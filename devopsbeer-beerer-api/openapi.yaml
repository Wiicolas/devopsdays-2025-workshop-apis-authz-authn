openapi: 3.1.0
info:
  title: BeererAPI
  description: |
    API for requesting details and list of beers for organization.
  version: 1.0.0
  contact:
    name: Devops Beerer Team
    url: https://devopsbeerer.ch/support
    email: no-reply@devopsbeerer.ch
  license:
    name: MIT
    identifier: MIT

servers:
  - url: htt√®p://localhost:3000/1.0.0
    description: Local development server
  - url: https://api.devopsbeerer.ch/1.0
    description: Production server
  - url: https://try.devopsbeerer.ch/rest/BeererAPI/1.0.0
    description: Mock Server

tags:
  - name: beers
    description: Operations related to beers

components:
  schemas:
    BeerName:
      type: string
      description: Name of the beer
      example: "Hazy Wonder"

    BeerStyle:
      type: string
      description: Style of the beer
      example: "IPA"

    BeerABV:
      type: number
      format: float
      description: Alcohol by volume percentage
      example: 6.5

    BeerIBU:
      type: number
      format: float
      description: International Bitterness Units
      example: 45

    BeerAvailability:
      type: boolean
      description: Whether the beer is currently available
      default: true

    Beer:
      description: A beer object
      type: object
      required:
        - name
        - style
        - abv
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the beer
          readOnly: true
          examples:
            - 29470fa4-aeec-4893-a781-4b10f017d966
            - f3f2c45e-a856-436f-89ab-8f0c3fd39d82
            - e8b1ea3a-8748-49d7-b251-9c17a44eb1e5
        name:
          $ref: "#/components/schemas/BeerName"
        style:
          $ref: "#/components/schemas/BeerStyle"
        abv:
          $ref: "#/components/schemas/BeerABV"
        ibu:
          $ref: "#/components/schemas/BeerIBU"
        isAvailable:
          $ref: "#/components/schemas/BeerAvailability"
        createdDate:
          type: string
          format: date-time
          description: Date when the beer was created
          readOnly: true
        updatedDate:
          type: string
          format: date-time
          description: Date when the beer was last updated
          readOnly: true
      examples:
        - id: "550e8400-e29b-41d4-a716-446655440000"
          name: "Hazy Wonder"
          style: "IPA"
          abv: 6.5
          ibu: 45
          isAvailable: true
          createdDate: "2022-01-01T12:00:00Z"
          updatedDate: "2022-01-01T12:00:00Z"
        - id: "550e8400-e29b-41d4-a716-446655440001"
          name: "Midnight Stout"
          style: "Imperial Stout"
          abv: 9.2
          ibu: 60
          isAvailable: false
          createdDate: "2022-01-03T09:15:00Z"
          updatedDate: "2022-02-01T10:45:00Z"
        - id: "550e8400-e29b-41d4-a716-446655440002"
          name: "Pilsner Paradise"
          style: "Pilsner"
          abv: 4.8
          ibu: 20
          isAvailable: true
          createdDate: "2022-01-02T14:30:00Z"
          updatedDate: "2022-01-02T14:30:00Z"
        - id: "550e8400-e29b-41d4-a716-446655440003"
          name: "Berry Blast"
          style: "Fruited Sour"
          abv: 5.2
          ibu: 10
          isAvailable: true
          createdDate: "2022-03-15T11:20:00Z"
          updatedDate: "2022-03-15T11:20:00Z"
        - id: "550e8400-e29b-41d4-a716-446655440004"
          name: "Sunny Wheat"
          style: "Hefeweizen"
          abv: 5.0
          ibu: 15
          isAvailable: true
          createdDate: "2022-04-01T08:45:00Z"
          updatedDate: "2022-05-01T09:30:00Z"

    BeerCreate:
      description: Input object for creating a new beer
      type: object
      required:
        - name
        - style
        - abv
      properties:
        name:
          $ref: "#/components/schemas/BeerName"
        style:
          $ref: "#/components/schemas/BeerStyle"
        abv:
          $ref: "#/components/schemas/BeerABV"
        ibu:
          $ref: "#/components/schemas/BeerIBU"
        isAvailable:
          $ref: "#/components/schemas/BeerAvailability"
      examples:
        - name: "Hazy Wonder"
          style: "IPA"
          abv: 6.5
          ibu: 45
          isAvailable: true
        - name: "Midnight Stout"
          style: "Imperial Stout"
          abv: 9.2
        - name: "Pilsner Paradise"
          style: "Pilsner"
          abv: 4.8
        - name: "Berry Blast"
          style: "Fruited Sour"
          abv: 5.2
          isAvailable: false
        - name: "Sunny Wheat"
          style: "Hefeweizen"
          abv: 5.0
          ibu: 15
          isAvailable: true

    BeerUpdate:
      description: Input object for updating an existing beer
      type: object
      properties:
        name:
          $ref: "#/components/schemas/BeerName"
        style:
          $ref: "#/components/schemas/BeerStyle"
        abv:
          $ref: "#/components/schemas/BeerABV"
        ibu:
          $ref: "#/components/schemas/BeerIBU"
        isAvailable:
          $ref: "#/components/schemas/BeerAvailability"
      examples:
        - name: "Hazy Wonder"
          style: "IPA"
          ibu: 32
          isAvailable: false
        - name: "Midnight Stout"
          abv: 9.2
          ibu: 15
        - name: "Pilsner Paradise"
          style: "Pilsner"
          abv: 4.8
        - name: "Berry Blast"
          style: "Fruited Sour"
          abv: 5.2
          isAvailable: false
        - name: "Sunny Wheat"
          style: "Hefeweizen"
          abv: 5.0
          ibu: 15
          isAvailable: true

    Error:
      type: object
      description: Error response format
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
          examples:
            - 400
            - 401
            - 404
        message:
          type: string
          description: Error message
          examples:
            - "Bad request"
            - "Unauthorized"
            - "Not found"
      examples:
        - code: 400
          message: "Bad request"
        - code: 401
          message: "Unauthorized"
        - code: 404
          message: "Not found"

  parameters:
    beerId:
      name: beerId
      in: path
      required: true
      description: Unique identifier of the beer
      schema:
        type: string
        format: uuid
      examples:
        hazyWonder:
          value: "550e8400-e29b-41d4-a716-446655440000"
        midnightStout:
          value: "550e8400-e29b-41d4-a716-446655440001"
        pilsnerParadise:
          value: "550e8400-e29b-41d4-a716-446655440002"

    availabilityFilter:
      name: isAvailable
      in: query
      description: Filter beers by availability
      schema:
        type: boolean

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

paths:
  /beers:
    get:
      summary: List all beers
      description: Returns a list of beers with optional filtering
      operationId: listBeers
      tags:
        - beers
      parameters:
        - $ref: "#/components/parameters/availabilityFilter"
      responses:
        "200":
          description: A list of beers
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - total
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Beer"
                  total:
                    type: integer
                    description: Total number of beers matching the filter criteria
                    example: 2
              examples:
                all:
                  value:
                    data:
                      - id: "550e8400-e29b-41d4-a716-446655440000"
                        name: "Hazy Wonder"
                        style: "IPA"
                        abv: 6.5
                        ibu: 45
                        isAvailable: true
                        createdDate: "2022-01-01T12:00:00Z"
                        updatedDate: "2022-01-01T12:00:00Z"
                      - id: "550e8400-e29b-41d4-a716-446655440001"
                        name: "Midnight Stout"
                        style: "Imperial Stout"
                        abv: 9.2
                        ibu: 60
                        isAvailable: false
                        createdDate: "2022-01-03T09:15:00Z"
                        updatedDate: "2022-02-01T10:45:00Z"
                      - id: "550e8400-e29b-41d4-a716-446655440002"
                        name: "Pilsner Paradise"
                        style: "Pilsner"
                        abv: 4.8
                        ibu: 20
                        isAvailable: true
                        createdDate: "2022-01-02T14:30:00Z"
                        updatedDate: "2022-01-02T14:30:00Z"
                    total: 3
                empty:
                  value:
                    data: []
                    total: 0
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

    post:
      summary: Create a new beer
      description: Creates a new beer in the database
      operationId: createBeer
      tags:
        - beers
      requestBody:
        description: Beer to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BeerCreate"
      responses:
        "201":
          description: Beer created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beer"
              examples:
                hazyWonder:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440000"
                    name: "Hazy Wonder"
                    style: "IPA"
                    abv: 6.5
                    ibu: 45
                    isAvailable: true
                    createdDate: "2022-01-01T12:00:00Z"
                    updatedDate: "2022-01-01T12:00:00Z"
                midnightStout:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440001"
                    name: "Midnight Stout"
                    style: "Imperial Stout"
                    abv: 9.2
                    ibu: 60
                    isAvailable: false
                    createdDate: "2022-01-03T09:15:00Z"
                    updatedDate: "2022-02-01T10:45:00Z"
                pilsnerParadise:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440002"
                    name: "Pilsner Paradise"
                    style: "Pilsner"
                    abv: 4.8
                    ibu: 20
                    isAvailable: true
                    createdDate: "2022-01-02T14:30:00Z"
                    updatedDate: "2022-01-02T14:30:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /beers/{beerId}:
    parameters:
      - $ref: "#/components/parameters/beerId"
    get:
      summary: Get a beer by ID
      description: Returns a single beer by ID
      operationId: getBeerById
      tags:
        - beers
      responses:
        "200":
          description: Beer found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beer"
              examples:
                hazyWonder:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440000"
                    name: "Hazy Wonder"
                    style: "IPA"
                    abv: 6.5
                    ibu: 45
                    isAvailable: true
                    createdDate: "2022-01-01T12:00:00Z"
                    updatedDate: "2022-01-01T12:00:00Z"
                midnightStout:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440001"
                    name: "Midnight Stout"
                    style: "Imperial Stout"
                    abv: 9.2
                    ibu: 60
                    isAvailable: false
                    createdDate: "2022-01-03T09:15:00Z"
                    updatedDate: "2022-02-01T10:45:00Z"
                pilsnerParadise:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440002"
                    name: "Pilsner Paradise"
                    style: "Pilsner"
                    abv: 4.8
                    ibu: 20
                    isAvailable: true
                    createdDate: "2022-01-02T14:30:00Z"
                    updatedDate: "2022-01-02T14:30:00Z"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

    patch:
      summary: Partially update a beer
      description: Updates specific fields of an existing beer
      operationId: patchBeer
      tags:
        - beers
      requestBody:
        description: Beer data to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BeerUpdate"
      responses:
        "200":
          description: Beer updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beer"
              examples:
                hazyWonder:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440000"
                    name: "Hazy Wonder"
                    style: "IPA"
                    abv: 6.5
                    ibu: 45
                    isAvailable: true
                    createdDate: "2022-01-01T12:00:00Z"
                    updatedDate: "2022-01-01T12:00:00Z"
                midnightStout:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440001"
                    name: "Midnight Stout"
                    style: "Imperial Stout"
                    abv: 9.2
                    ibu: 60
                    isAvailable: false
                    createdDate: "2022-01-03T09:15:00Z"
                    updatedDate: "2022-02-01T10:45:00Z"
                pilsnerParadise:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440002"
                    name: "Pilsner Paradise"
                    style: "Pilsner"
                    abv: 4.8
                    ibu: 20
                    isAvailable: true
                    createdDate: "2022-01-02T14:30:00Z"
                    updatedDate: "2022-01-02T14:30:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

    delete:
      summary: Delete a beer
      description: Deletes a beer from the database
      operationId: deleteBeer
      tags:
        - beers
      responses:
        "204":
          description: Beer deleted successfully
          content:
            application/json:
              schema: {}
              examples:
                hazyWonder:
                  value: {}
                midnightStout:
                  value: {}
                pilsnerParadise:
                  value: {}
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
